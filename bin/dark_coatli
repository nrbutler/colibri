#!/bin/bash

file_list=$1
shift

ndmin=8
bin=1
rmode=1MHz
rebin=2

dark_archive_dir=${REDUX_BASE_DIR}/dark_bank
cleanup=yes

while [ $# -gt 0 ] ; do eval $1 ; shift ; done

[ -f $file_list ] || { echo "No file $file_list" ; exit 1 ; }

go_iter=0
function gonogo() {
    ((go_iter++))
    [ "$((go_iter%NBATCH))" -eq 0 ] && wait
}

dte=`date -u +20%y%m%d_%H%M%S`
file0=`head -1 $file_list`
day=`basename $file0 | cut -c1-8`
cam=`gethead CCD_NAME $file0`
[ "$cam" ] || cam=`basename $file0 | cut -c16-17`
biasfile=bias_${cam}.fits
dte1=`basename $file0 | sed -e 's/f//g' -e 's/C/ /g' | awk '{print $1}'`
tag=${dte1}_${cam}_w_${rebin}
me=`basename $0`
here=`pwd`
workdir=${here}/${me}_${dte}_$$
[ -d $workdir ] || mkdir $workdir

echo "Working in directory $workdir, logging to ${workdir}/${me}_${dte}_$$.log"
exec > ${workdir}/${me}_${dte}_$$.log 2>&1

gethead -p BINNING READMODE @$file_list | awk '{if($3~/'$rmode'/ && $2=='$bin') print $1}' > ${workdir}/dlist$$.txt

nfiles=`cat ${workdir}/dlist$$.txt | wc -l`

if [ "$nfiles" -lt "$ndmin" ]; then
    echo "Not enough files with readmode $rmode and bin=$bin!"
else

    if [ -f "${workdir}/$biasfile" ]; then
        echo "Using biasfile ${workdir}/$biasfile"
    else
        bias=`find_bias.sh $day $cam $rebin`
        cd $workdir
        echo funpack -O $biasfile $bias
        funpack -O $biasfile $bias
        cd $here
    fi

    file0=`head -1 ${workdir}/dlist$$.txt`
    bsec=`gethead BIASSEC $file0`
    dsec=`gethead DATASEC $file0`

    echo "Using $nfiles files to build the dark..."
    echo "# file                     exptime  Bin RM"
    gethead EXPTIME BINNING READMODE @${workdir}/dlist$$.txt | awk '{printf("%s %f %d %s\n",$1,$2,$3,$4)}'

    function reduce_dark() {
        local file=$1
        local bfile=`basename $file`
        local bfile0=${bfile%'.fz'}
        local med0=`immed "${file}${bsec}"`
        local dti=`gethead EXPTIME $file | awk '{print 1/$1}'`
        echo darkreduce ${file}${dsec} ${workdir}/$biasfile ${workdir}/$bfile0 $med0
        darkreduce ${file}${dsec} ${workdir}/$biasfile ${workdir}/$bfile0 $med0
        sethead BSCALE=$dti ${workdir}/$bfile0
    }

    for file in `cat ${workdir}/dlist$$.txt`; do
        reduce_dark $file &
        gonogo
    done
    wait
    for file in `cat ${workdir}/dlist$$.txt`; do
        bfile=`basename $file`
        bfile0=${bfile%'.fz'}
        ls ${workdir}/$bfile0 | awk -F/ '{print $NF}'
    done > ${workdir}/dlist$$.tmp
    cd $workdir
    mv dlist$$.tmp dlist$$.txt

    echo swarp @dlist$$.txt -c ${SWARP_DIR}/ratir_redux.swarp -COMBINE_TYPE MEDIAN -IMAGEOUT_NAME dark_${tag}.fits -WEIGHTOUT_NAME expmapdark_${tag}.fits -WEIGHT_TYPE NONE -RESAMPLE N -SUBTRACT_BACK N
    swarp @dlist$$.txt -c ${SWARP_DIR}/ratir_redux.swarp -COMBINE_TYPE MEDIAN -IMAGEOUT_NAME dark_${tag}.fits -WEIGHTOUT_NAME expmapdark_${tag}.fits -WEIGHT_TYPE NONE -RESAMPLE N -SUBTRACT_BACK N 2>/dev/null
    sethead EXPTIME=1.0 dark_${tag}.fits

    fpack dark_${tag}.fits
    cp dark_${tag}.fits.fz $dark_archive_dir

fi

cp ${workdir}/${me}_${dte}_$$.log ${dark_archive_dir}/dark_${tag}.log

[ "$cleanup" = "yes" ] &&  rm -r $workdir
