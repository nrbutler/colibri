#!/bin/bash

file_list=$1
shift

bin=1
rmode=0
nbmin=8

bias_archive_dir=${REDUX_BASE_DIR}/bias_bank
cleanup=yes

while [ $# -gt 0 ] ; do eval $1 ; shift ; done

[ -f $file_list ] || { echo "No file $file_list" ; exit 1 ; }

go_iter=0
function gonogo() {
    ((go_iter++))
    [ "$((go_iter%NBATCH))" -eq 0 ] && wait
}

dte=`date -u +20%y%m%d_%H%M%S`
file0=`head -1 $file_list`
ccd=`gethead CCD_NAME $file0`
[ "$ccd" ] || ccd=`basename $file0 | cut -c16-17`
dte1=`basename $file0 | sed -e 's/f//g' -e 's/C/ /g' | awk '{print $1}'`
tag=${dte1}_${ccd}_w_${bin}_${rmode}
me=`basename $0`
here=`pwd`
workdir=${here}/${me}_${dte}_$$
[ -d $workdir ] || mkdir $workdir

echo "Working in directory $workdir, logging to ${workdir}/${me}_${dte}_$$.log"
exec > ${workdir}/${me}_${dte}_$$.log 2>&1

gethead -p BINNING READMODE @$file_list | awk '{if($2=='$bin' && $3~/'$rmode'/) print $1}' > ${workdir}/blist$$.txt

nfiles=`cat ${workdir}/blist$$.txt | wc -l`

file0=`head -1 ${workdir}/blist$$.txt `
bsec=`gethead BIASSEC $file0`
dsec=`gethead DATASEC $file0`

if [ "$nfiles" -lt "$nbmin" ]; then
    echo "Not enough files with readmode $rmode and bin=$bin!"
else

    function breduce() {
        local file=$1
        local bfile0=$2
	local med0=0.0
        [ "$bsec" ] && med0=`immed "${file}${bsec}"`
        echo biasreduce "${file}${dsec}" $bfile0 $med0
        biasreduce "${file}${dsec}" ${workdir}/$bfile0 $med0
        sethead MED0=$med0 ${workdir}/$bfile0
    }

    for file in `cat ${workdir}/blist$$.txt`; do
        bfile=`basename $file`
        bfile0=${bfile%'.fz'}
        breduce $file $bfile0 &
        gonogo
    done
    wait
    for file in `cat ${workdir}/blist$$.txt`; do
        bfile=`basename $file`
        bfile0=${bfile%'.fz'}
        ls ${workdir}/$bfile0 | awk -F/ '{print $NF}'
    done > ${workdir}/blist$$.tmp
    cd $workdir
    mv blist$$.tmp blist$$.txt

    echo "Using $nfiles files to build the bias..."
    echo "# file                  biaslevel Bin RM"
    gethead MED0 BINNING READMODE @blist$$.txt | awk '{printf("%s %f %d %s\n",$1,$2,$3,$4)}'

    echo swarp @blist$$.txt -c ${SWARP_DIR}/ratir_redux.swarp -COMBINE_TYPE MEDIAN -IMAGEOUT_NAME bias_${tag}.fits -WEIGHTOUT_NAME expmapbias_${tag}.fits -WEIGHT_TYPE NONE -RESAMPLE N -SUBTRACT_BACK N
    swarp @blist$$.txt -c ${SWARP_DIR}/ratir_redux.swarp -COMBINE_TYPE MEDIAN -IMAGEOUT_NAME bias_${tag}.fits -WEIGHTOUT_NAME expmapbias_${tag}.fits -WEIGHT_TYPE NONE -RESAMPLE N -SUBTRACT_BACK N 2>/dev/null

    fpack bias_${tag}.fits
    cp bias_${tag}.fits.fz $bias_archive_dir

fi

cp ${workdir}/${me}_${dte}_$$.log ${bias_archive_dir}/bias_${tag}.log

[ "$cleanup" = "yes" ] &&  rm -r $workdir
